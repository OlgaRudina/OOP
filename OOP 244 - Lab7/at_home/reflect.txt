// Workshop 7 - Derived Classes

// Date 2018/07/16

// Student Olga Rudina

// Description

// reflect
/////////////////////////////////////////////////////




1. Does the Hero class need to know about the existence of the SuperHero class? (Hint: do a search in Hero.cpp, does the word “SuperHero” appear anywhere?)

No, it doesn't

2. Does the SuperHero class need to know about the existence of the Hero class? (Hint: do a search in SuperHero.cpp, does the word “Hero” appear anywhere?)

Yes, because SuperHero is derived class. It neeeds to know what parent class it inherits.

3. The program prints out “Ancient Battle!” when 2 Heroes fight. It prints out “Super Fight!” when 2 SuperHeroes fight. 
When you tried to make a Hero fight a SuperHero, what did it print out?

It prints out "Ancient Battle!"

4. True or False: are the following definitions for main valid? 

int main() { 

Hero("Achilles", 20, 6) * Hero("Hector", 30, 5); 

} 

how about this? 

int main() { 

(Hero("Achilles", 20, 6) * Hero("Hector", 30, 5)) * (Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2)); 

}

Yes, both of these definitions are valid for main.



Quiz 7 Reflection

1) How can we call a function that has been shadowed?

Base::identifier(arguments)

Base identifies the class to which the shadowed function belongs.

2) Give an example of when shadowing would occur:

class BaseClass{

public:

void foo();

};

void BaseClass::foo(){

cout << "BaseClass";

}

class DerivedClass::public BaseClass

{

public:

void foo();

};

void DerivedClass::foo()
{

cout << "DerivedClass";

}

int main{

DerivedClass whatClass;

whatClass.foo();

return 0;

}
